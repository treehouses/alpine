name: build on change

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
  repository_dispatch:
    types: alpine

jobs:

  compare:
    runs-on: ubuntu-latest
    outputs:
      flag: ${{ steps.set-flag.outputs.flag }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2   
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: compare image
        id: set-flag
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          version="3.12"
          repo="treehouses/alpine-tags:${{ matrix.arch }}"
          case ${{ matrix.arch }} in
            amd64) : "amd64/alpine:$version" ;;
            arm) : "balenalib/raspberry-pi-alpine:$version" ;;
            arm64) : "arm64v8/alpine:$version" ;;
          esac
          base="$_"
          docker pull -q $base &>/dev/null
          docker pull -q $repo &>/dev/null
          basesha=$(docker inspect --format='{{index .RepoDigests 0}}' "$base" 2>/dev/null | cut -d @ -f 2)
          reposha=$(docker inspect --format='{{index .RepoDigests 0}}' "$repo" 2>/dev/null | cut -d @ -f 2) 
          [[ $basesha != $reposha ]] && echo "::set-output name=flag::true" || echo "no changes"

  images:
    needs: compare
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.set-build.outputs.build }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: docker image
        if: ${{ needs.compare.outputs.flag }}
        id: set-build
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          version="3.12"
          case ${{ matrix.arch }} in
            amd64) : "amd64/alpine:$version" ;;
            arm) : "balenalib/raspberry-pi-alpine:$version" ;;
            arm64) : "arm64v8/alpine:$version" ;;
          esac
          image="$_"
          repo="treehouses/alpine-tags:${{ matrix.arch }}"
          date="$(date +%Y%m%d%H%M)"
          docker build -t ghcr.io/$repo --build-arg IMAGE=$image . 
          docker tag ghcr.io/$repo docker.io/$repo
          docker tag ghcr.io/$repo ghcr.io/$repo-$date
          docker tag docker.io/$repo docker.io/$repo-$date
          docker push ghcr.io/$repo --all-tags
          docker push docker.io/$repo --all-tags
          docker images
          echo "::set-output name=build::true"

  manifests:
    needs: images
    strategy:
      fail-fast: false
      matrix:
        registry: [docker.io, ghcr.io]
    runs-on: ubuntu-latest
    steps:
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: create manifests
        if: ${{ needs.images.outputs.build }}
        run: |
          repo="${{ matrix.registry }}/treehouses/alpine"
          date="$(date +%Y%m%d%H%M)"
          docker manifest create $repo:latest $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
          docker manifest create $repo:$date $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
          docker manifest annotate $repo:latest $repo-tags:arm --os linux --arch arm 
          docker manifest annotate $repo:$date $repo-tags:arm --os linux --arch arm 
          docker manifest inspect $repo:latest
          docker manifest push $repo:latest
          docker manifest push $repo:$date
