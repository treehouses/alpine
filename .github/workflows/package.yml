name: publish

on: [push]

jobs:
  images:
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker
        run: docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}

      - name: Log in to the Container registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build docker image
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker run --privileged --rm docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
          version="3.12"
          case ${{ matrix.arch }} in
            amd64) : "amd64/alpine:$version" ;;
            arm) : "balenalib/raspberry-pi-alpine:$version" ;;
            arm64) : "arm64v8/alpine:$version" ;;
          esac
          image="$_"
          repo="rjpadilla/alpine-tags:${{ matrix.arch }}"
          docker buildx build -t ghcr.io/$repo --build-arg IMAGE=$image . 
          docker tag ghcr.io/$repo docker.io/$repo
          docker push ghcr.io/$repo
          docker push docker.io/$repo
          docker images
  
  manifests:
    needs: images
    strategy:
      fail-fast: false
      matrix:
        registry: [docker.io, ghcr.io]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker
        run: docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}

      - name: Deploying manifest to Github Packages
        run: |
          repo="${{ matrix.registry }}/rjpadilla/alpine"
          docker manifest create $repo:latest $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
          docker manifest inspect $repo:latest
          docker manifest annotate $repo:latest $repo-tags:arm --os linux --arch arm 
          docker manifest inspect $repo:latest
          docker manifest push $repo:latest

      
      
